%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, 3 February 2011 21:15:02 o'clock GMT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 200.000 200.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -200.000 -200.000 ] concat
q
[ 390.000 0 0 390.000 5.00000 5.00000 ] concat
<<
/ImageType 1
/Width 390  /Height 390
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [390 0 0 390 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ;L&m#2!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqC&(g$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX
!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!3W0%_]TVi&'4#r!f3jFf)(c.$1b8n#&Qk2155<D
uIR(h"FVW8)07VqrbKgk3D)F9sA<tT\^LSnC`sA1rkKLbT(D8@[\5bX?CbY-&!2>?!!2?IX[^UIl?,aL
3TdHCTl%lL*,`ot#Nn4Cflpma/+Q/3n#g7QISTZk27XMbGmbT<aKT0NO.MNRD1dK2S1*[K2aW_]3!9br
&d^<@OGa;&BqYO":>qOc5T#TT[2J`_:8Q<k\1+SYqQ/X^;D#Csm@Hk?TotI`cNW,gre#g0hO34p%>"%-
_)9?84Fhud3:bS4`([&R6gnKZS!2?uQL`.@joa<jP>5lCYo']5Y10mC".nJ5ZP9U#,H!>#S@pi8k?5P,
1H\qeOU9jO;=Yq-/pK!U6H\cLtBr$au]Cmm/7cmR`am7]?S-f8CU8*<0RbfK")'F,gbnPk)+X?EGUl:>
(&j6Q#-iuEeL?dW"H\eGc#uIF[aJ"mKN"A;5JiL_jIL3F3D(P.qVl!7&2"toLaZ\(to#I@T+QP=f7>a'
ho"b1*\XB'172,`!72,`!72,`!72,`!72,`!72,`!72,`!72,`!72,`!72,`!72,`!72,`!72,`!72,`
!72,`!72,`!<:qhI:!p)oj&FM[/7<)rZ<^//.;TZJ=FltDEU7H%!#/M*l>T)dVR*9Z;7<04i]T3Ng?ba
n_[HF$Ht`IY)pO^!%M+s&qo:mW5TJ[@i\K^u_/:m`5MC9/>1Vh,(ouH4)hQ/HOB'qCg`E+#dT/Sgdn;S
WP3UVJBoXc3d(t:!Ncpg'2[:QEB,SP_]7pS:*Jsj#I;AQ23A&4gp?^E^1_7"AJHQS;i.8]J:I5=4*<-!
KgY'PYFZ$;fpX2i]0A:<A!FAp(5"fE9Wf=_h:R+1,1W^o2UW3-Pp26LIo?&-ReiUsT,D#$f&NIjDMBL+
ZZ#":')9EW>BXdsdMb]Slg;_`;%=<;=k3<enFqWS%.]A@T!"H4eb[edE_eBs&_R:qR"aZ>)qWq0i.;Y%
D3T6Cg8>V=&(YL:=!`?C\_g3?)V['I3]lA5P/F`:\1t;1&euT(J2P4[dGM[ZESY\n1=ekS0Zcie$2U(U
*c7fR)Oa('GkI[3^]"QXcnkgt&HT1A'+Vb4F&1fD`Mh4cqJ9-f,d<Y`aj&XLb(MZd]Y+Oilll+[4Z+mW
pm,Pa_]7TJ%9^J2S"Gk\U*&-=/Jj0Sn0<On13njSY:GUMd,aoP'7c[qaS/t-c*G^eMnFq_2)n3Gnd.GM
^R5)Eim3?gk$k/:SGQ<1-%C_,PdiaZ&+'$k`i>Mu`-0nec`WcJMkOT9U"-B17?k<VKl0$Q'`tlE3nhY5
ukr":hGLZ7lm4C4(];[F,<`7$@88[E"]Xr`4=,;1+3=GL!'u4*hrZIBe:R3XG`BW!m%Ff6nC$R"10hDr
[_U1!\Z4[AskP0kkBs3A@6PB^9nEla-O1_n^R?D(E[:G.O4S?mX1Q7h+gJ9ZC<8)Ngd"AF$58dV]C-E!
Ulnln1mOp2oV1L+e?S!pS/,-8;E)&3>:&uIWN8%,ILuu;fcC(ZarqIF'd_]4S0^MP?T^r^RRHAM!*MIL
6abRgK1smq'+0MK-iX8&ONABbXJif'\0tP6Hri[Kmf*%1#.ta@$]4"_RedXi/\_9nL7V@Em'&BCC:?]u
cQ5c5kJA_qn!m1i:\9c\VTAj-KD&^@'^8Z"T[.[O!>Xl"#<3dZT%L>&8obC7lQM0(O3gPbJW6_D4"f8W
T:NDT!JBII4?eqG/dH%8K/oo4"7KD)UZ+&6Tl^J:'r6&<CSf*`3)j,[[1-$3ToW5e<=^*>de77"rofJ"
8g.QR1W/ZTYOZ]kHLq$MAo=$)ejGgYLgnK\0I:X1fB-jY*3_&ndJp2pg#Wt-Z_l%"j:6Yc#X/]?:\m<=
PIe"e]Z>Z#V-]kA&4&?TAe=:J5:B8q$-<lsaVa2Fs&3>XmA7,\h._lc__u`$P0B.s:l2L_nHpqVD>O#;
\gf[CO$XH>H.l55PjYFA+*Hm(fi"C!TaoEiaZ0c\tFalU0:.se'KM9K6p60P3C3fr/`B`4@nqI:+o]cE
7.'@L*QhpC@l4N?Fl)cP4U^nK9%iL7A]:9MZiR"@:b.rXb+dGS@FHcc&72,`!72,`!72,`!72,`!72,`
!72,`!72,`!72,`!7:jBr>mBIk3a<T[RkC?SOP2#/1ng6tL;7kmK9;0JBEM.i_m%]L0C>/!]jFOA[@V_
j/g+q&`jepOZteR/7i>6n;]#a(2K=;;)OH2c*G48J2,+`Y^7A(Ea`V?]Y[!BB=;-XVEUIKASaVG1Q\\^
53YnbP2jRM,-%s98h,(Tc5ikk1Do/&qJjp*2WMs#rI;Z;ol?@Q$LC@b%=IFu]q+mB<1!Y)XJ^7T]lZ)3
6\ttD"^6^%5>M*h$e:c5:UI"Ip*D$dTUM5eiN]qQ%b&anbTFOc:.b]B,o\3T.]=Za'=OYW%9+mP#p;i`
do$L<"!s%6hK9A]Mb0/5@.Bg-"Eo'fT-&(X=`)I_A2XnnUkH=%dEK1%qSo/J&p1pd96"=aqY@<S[d*8J
]AU+TGc,?d.'*SF\Kjo)H3SN5";N+W:lr7CB4%3E0\kP-_'4!J,dVU;[*m3JE[0DUaYcM[[lrM,FIaHm
Vn%m7?YBYrN_l]e!r3/J&H$4%rid$2K&+66T0dhuT@<%G(^B;;ZC)[)RX]oP$W5YR?]Fr%#2A*%7"H=:
9d`S@>bY!,>8Bru1P1t=FCMSQC4P?lpH%0M=S`c4aF0J4Z//LG9c81ZCRe,iWFJ5KH1HT=4eRbhh2EX@
d<nFE^[F"R1jmqj,Y$0i`?Htdjb`\1kd)]>U"$8F"M;1_j0huk.;]j`Ibf(Cd_kq@X9_Mpqb_5OV2seO
J>`@/rJ%ZnQ]m2L,$r("@j^)<VF[l[3*bDA[9+<KXK28e]["XupNnu(A94/1d!R:].g9(2Mop=k=deWn
8k.5EAZ,mo5J%[M-mob*h]e?#H9A(<U7]2mI8"]6QSq"F,SaT5)*7@<KTC5G9qpoDNmn;hAp.%6-V<@a
*2fW$d(9_M#D[jt'j*XcJFDMqUK>HUNpf1*JQd,8u;mX%qUkf]%\i%3N_eRnCn%\gh4I1G/VZ-WBQZbC
/m,KH1aef!^e0EI[n)3^_UZ^@LnCo8+6S*!l'I=hL,]tFjaY1;XpVA-)hJFp:mp.d?(lEeOhqhi*-*o0
nYB[)!5%IhLV7WVR/WZ7u!2I$drWA+'cP8Q(i`j)8:6O@1nE-IHDf4thRapAc-!>+2QRhZa*!L>tO)`2
JSgf'UH=&_F+e%Dc]q;>)!%SZSRZTE[rZl`7b11)_7OMu-+VEVP-';ba<>jE6<Se<i]43f&OtmJgp,D\
kSXani(N<[6adnV]+H[TGK8(?c&4b\a8"K*Of/bOFGBVT%Bst-g83^i$"dqmu%'gD3=C>Ng#f+7nY./+
/cO[RGA*reSmi^,WQc3-_QHLA4De3d)Muh^;8"Ea'EK!;qj14L1;S9R]26?5A][QP%>12t0=JVJD29S*
s8I@o,R(*<V":U6Z&.-VBebiEbJge$t5'1+o?KoGjDtf32`eW:S36#uZ:L#\\4L_op?fc=Z5)\7LoK'1
#l/`:oH1kCDG=;V5?2O>Zncf44!ElWmqkkQeCPC.u<N^$s7?+1HUDrp9[Z206ZG.&I1l@qBAXR$.*"l$
;E^p@t'3+LmV9Z!tl)lkf@a*P@0/Uc$9fWfT=lU%(%l&P1W5a%*`]:33@]7W3Ret@iLncPt^@SDRFIUH
Z7dj7)Y@+rU\V_nXD68a/XDsXGITCYSZRb,)`]!<?8_C+k*u9*>;nS.9_o*Hnh:.kG$l?1im=7dFK9Lf
lr$pfoV%*+KUMgdd*l?i>b#f&f0h3itSss7fc8c-pG;^tr#/&Z_Opt&Y9g<rf"6o7%mGi0W"MeR>K<pM
s%QW_7ZI<[gDkp\'eiIZDG?5R^D+;`&Rs/hN.!oYpW&Vk49,8b"(a(`c>pd1_rr?MQHW/J-T0)BtP2,k
;[dVk&[c[l5`\W6F8#5CRlB>tFC%dC^9Ud??=B%oY`shab+"HbU@Hg#n.&)S!.&)S!.&)S!.&)S!.&)S
!.&)S!.&)S!.'?i<?afJM]=!7F8=&]+c7?rH_lSq+9T:52$Bb>gUW\B%a6r!sS[gp;n[F4Kd,Gi?,1A/
M2&ciq<nBo"Ki7=SD5`,o@6ljQSgX\V8C@)Y4A0n!?9tIC4SJ(E_q?h#^LTR@Q.;+E79=^@)=f&hA*'k
>9(Pgir'l`Fdk<QF$I\`Vi[0L>),Jq=6'REb'`RiQPJC`pE(FER4RMjWYA29UrjQp(87;^o9r)Mh`^:p
@H=nCs@?[4#0nf'2iR[1e6Rp&UeOIa.:\Z;WUjPGTi:*n/2R0='/u^^^['q_n`b(`&`3*7;M+]6Wc?=d
1%oHF?Gk8lf>=aZb@qs$GB9%>Vk<G,?@i@1$PuSt7%DkU3]RimK2/XPDJRGp@3+6(ZN\q0=-RSn@e@pF
GEE'qWIfcn@;TU@T>*#0B7'kN3Ik9%5P"DWE4G$_MejDpt"UH3m!(IeLWpU3(#@:/Dq>U&TkPN^'rq4)
eb&6co4&m\-<e@TSkPN^'rq2W@qpP<>ocD2sB[lYPkk"c=1XGfloDRp#,FW;poDRoArq2X+pSWk]l$FY
DB[RQ@dtG,o2=+AJ1t+Y<>]qBU:&k978L+9@,`i11?gW3s>'T]'>PKF?/DtXUEVU=B/%*D&$uuUg$_4O
^/ha?nmFpRbGbBaF\k--VN1:<?a&4CCnNN8ogWqJ*GEU,*99]\.ZtdAuD!-rG.P"48:U[c;Q+-?;;`cT
a*N#)f(r1>AJE6203Bj=J"&\EX^T[ERRWg1iDX"lKZjfc$cRSaA2\*lD8f2sn!]tpH_XGE-oF'+I!:XJ
Grr<n:i7']3Kq=h@ReH.WBT$^<4FmMrEKf:4q,,5A;>gFobiY$pm=$8Z!2*Ybrr@[#5PW2NQf9Cg^>Gd
+Sp\;X8LDc#hJ2K!Y1:j'%[@Uq:P\rMkW>Yki*:cl9E+tu=,4QS4f3_eA:NW8fh8,j&+_gB8bS2W-d22
m/mNDYIC;]@qsEsDDLFH%3b7oYm=$8Z!2*Ybrr@[#5PW2RrXuCFJ'`O9rrBjUrrC'?=mLB?UG7MD;R<s
!0&hsfY/#/)!U7]'krMORiVAj6d#7d2;,<JT4at[9Aqk)E6@Dh?MFdB^KB`\65N*lrMi5boq_oUHcF%g
da/_g`UB;L"]*#c$EM?/a[8/&Slh^NSBf4EQ=_eq)V8)@5p:"@72u++;mET^A*]bCcXSK8pIA^343t:#
I;S7;GUh0A]-QJn(;o%H*GTN,<l1\4C5+-gJ*Eq=n7[Y@^lq=$3"$'p4SV3G<`\1hn8Mb_=UX&V8MbQ_
/)rd,FS#EP;KUh'c),KcO_8CU25TkV<R\eE:br&uuchF3\pT37:hR@;`1TK<;1m*3T,KY4U4`U4BkNe2
2<%uaiZrP>8):Wh]\Y"!b[Ipl\h8'iE%unt/J^puF1(OVO%7=Wu5gT.P-9KC.A%9FR?-R.&4Z>.7b.6^
D&Y&mI!3Yb1_H&RrYAhg/+RIl1F2?W1,`:B7.,^%S'PeTsMLtnX($OWIlESm_QdG3=jd"E&T.d))$TE`
$9rR:-H?A!m\Veu#ek9?ojqt6&UT$p"'kCbfOr2885V9U0HeKmO?4c0u]7-Ze:)oDX]7-GB'NLG5;+1I
!;+1I!;+1I!;+1I!;+1I!;-\R*iZ2N.rm(+A`BUf<WAQ1X[dX3PO!b5]mlu7"]m1Z+gcTuA-j5ib*Rpe
5/E;uKIqRF!G?U50XK5uuVt9ogG1#[X!r\h,@-sR;I%to/:WHg\qehb^rr?g4L\jG6o/s4^rKDH[,Q%A
QJ%MW6q0qf0<O$VG?>+YT?e[M?0;dT!,!dc"(_*XhjHoV;SV&Q9h_$fpW;/tn;hslgg,>q6g$3m"\fLe
K=&'iQZdE*)</ZQ3X'[*=eZ_7'!-XW4EX;a=$`aXsh4JJiK&^Hdq6>_0T"**AK!F`+';/.`T<S-0-@TX
h@C2WaB*7CWHWNL%98$lf2Q)A3:Z.FCN8^qR)Ho>NZ>)<1@lq?a&nfZ1gQ)9@Oa$<T<f*V1[oUttUF6t
DGN5PS5WRl.j^+WLB(5HM6`q<0.QbfPW:=Z,$@%<N+XFX(bbXXE6qVqT,idadk7cQCd+lSc19NP]MH,C
#GmE';JYKJq8G$O_F.*!:Vs1,TT07K!oY,ggHX56VoF&`nEp5K^TsnVJnrMqC39R,Kh0_--/gV#Eg9"=
,2FB)_5/0'eT?"?On;j9Kbp^bWdH,h,]e?#H?*2/aX-J6q[]^[7EO@'BU7QYP$us=q@blDonL_,A,.E<
k9':RX-j/5eg2m%5XPOjgTjLuu/Z&:\U>t+#/j8JMh&fbJQ<1]IDW-U&g@DUFYT2]lF<`s?c"HkOoe)(
RcW")u-BuJd4E:2=D)\(<3B<4%>6.2'jpY7?4k+L5f$0cP=)]_;^>s3K&4Zj7Gm#/o4G#:mkd^Aa7`cC
o>f6H<h]?:#!6>0\2m3<$4Fg04bpQ-Ka#)hYdF-:>D4ReG/`aLR>]*R;;ETsu\_qT5JX4+T.24A2X`O)
=C;4?JZ.VI6B<sFG[puZMSanc@;Xib#=?J2ikqn(%61[#iD>sT7]:K#JDudj_D.+Je\$1^mXqcgJLuLD
HE'qao&93sQE"7&[QV,QF*)lGS*Z`\dMhkrV:=7qR8TK@XKoq`)mu6gc9j=pNoY!Fu23s_ED(/bei.4a
]l\pDDJb`;"RdJGYT#S_[b0(DT_rLX:mB?]V$8<=C3Q4*oo?$RYCO2N@+2&`Zim7N01fkcO%t'=n:(OB
cUhkZVR`?HjZMsorqOd`r/q<ZX0Dm''?h</RrrBm3ci3tbWV01Lj^VdX>5#hZ;1q;bBa*!P[fi9Vl46S
HNkD"0W;ck74(\El4nV&;)I3:Bn]FYo5:c^qoj(>E5C`VVce[jb\3<"Qgh/b4!t3d7N9?J<Jah6LSD3;
u=hf55ZY\]K(6#4;gGn,;$=VBNmCBLPmZCT=6Z`LMA(N!c<pkIgE,jN>PhBh+r3lIG;Q!FE[UMbQTJ<f
`++ZS#kQ;c'^:+%AOG9#EY>[$:rLjpKaMQ"nJ%C:AK:]TU8U%rBk$ob8gd]esCq8'_@Ls"Yh6`S="8JZ
m!2)Gr/dFIo""*)l!T'W\%B-WaAVnXh(lVu:i/E6u9OjUb`H3"W_X0*1,21XR/Ueq'.C@ujGjnJY(]g7
DQ!Cl_?u;U;Tn[\Jd"kM`D6u8A0=:%kkdn%,SldT3SK`=1J"OE9ZR?fI*a7KaL>S-5$1B_.!o?\H9gX!
2)'?F`3t\')H4Oo,CV$s][^1q5CMsmm:?&N$:f"5!d\a1Wi8D=$::T4jHd>TES"j)"1$uB!#K@Z_jkH\
3p]H)f[9oYcl\neCOkCSMX$p,=U5ELc'N%+!'N%+!'N%+!'N%+!'N%+!'N%+!'N%+!F*\@Nk0bk5>'p&
4+O_m2:U!6r0s\YiH1P.M#p0`!b(Lj`jlC:C.%gu'U"mWI(Y7T[N8)NnYfU`E:Eq##ab@s+Lc=b2-pel
q#Hp#2ptFSEW*%44lSf@q:JPTa>DT&][QeP`19rD\aA)d3ej-$_V0U)!GF*8nf32>GmcDpb[**6LZUb\
F1UOuUKMO=_+;e@T=h$[E*1r.,lns3$8A9i%&kAm7nVM0H1Na]'rg+MuDO`2r^Gjskk:AEThuhIWU5Aq
!U5Aq!U5Aq!U5Aq!U5Aq#Xlc*]W9jCuQ*nr)SXt4$qfC@,*-<9f>,$OBgDmoQ_p8`rq8`@ob*$&NHr@Q
B-b?I(N-6&Y[:%j=,-cQg@F]7(`cq7KXL[uC2WMQSH8QF"X0JD$2:V0NmtCZ`N*RcsWnDdi1.=$Z,YSM
LA;(JO*ge=J51J7.)FD-N`+`nNX+jZlXD4O$$4#OIp.F7l+F%hlf@kDOj?WG4S)/,AGfu=RT,eEgA0::
ei8>?,dnOKcUR(']]%>Xqdqio?1X]RC<$OOFHfK.<];#nW394[;rP(Sq""^_W!*q4drrD8b\GlP[B0EN
DQTC\'T<MVV`=kh8/i)<HKQ]fLa-".?ni^_2XNphG284pHcOp&[D2p1I!5N,fEVQL+is)g_IR[3V/N((
f8[WnYj#pSs`2&%L?:RlfWT-,P+lCs3^[s6qJ+rBcrrA#,7E:3KkS^7Ii5SRl0h_5$&:`%_9`G+/N1^#
WQa:<eXtSEbGX(6C>Ouq1^>3OeA,Y:8bK%><gDK*%A+9\/5MEKfXFJD8ZcNF?p`B1MYMD4Y36jkhUVn8
H%+@H1@jh9V(oEj";N'V*6+N.EeZEJ<j$,luN.2Q^kG[I5c(+@7LJu]>rrD*N7[/q8-'ZS..f4tQjGnI
aDV3(jXBT&d?c(7Fbd&_,`ri>#F^`g&B97(&EDaQSf\K<2lQi`/q=<RVJ`(5r13Nn!>6D#aNr<`\8FYq
\*\>dD;Vj,CUR&N^m02P&iF+n%(LYn8g`\Z_DFI1o)00fAQI]\Ai%GPcUb8EjGmctkh9.VdQN$qb&QI%
TE!n_5qY\5j@`#`,.'BA/<_'+pW2h&8MCFc(;+1I!;+1I!;+1I!;+1I!;+1I!;+1I!;+1I!;+1I!;+1I
!;-_t:FUP<A`E)TqpMQ)LMgJCa_@<fY]MdiG+!`\]%K!Y8c?UZ;;VO^N[F[))Gi!L]I2"D.Y:4!Z(B(j
2qnMG,5i]R68N^@@mN>jJkg233U<_B%H!"9TQ75paYrQ#B2G,qn3B7p@g_J1Ah!,e1[r.%FGH7U6o,k3
B_QRjUN8^N]'BIp],N]Z`Z2Eq/IXf<q]!_1!CpIcH+Of]^Vl-T7.p+[>5AZ5dqd&=0+:Y4d"!\])#GP'
a'ED!!'ED!!'ED!!'ED!!'ED!!'ED!!'ED&YKe=L2)-:p#.7P2p5o;HT-j.I@1eG&$CO>,r[6gkdbD>u
cT,HIs)(WhEirFT0`[N:do_VeFh6&l`PfETIFD7RJ7WM?,?o]3hN^p%NZf3$]2PE9fk5PGVQc>1WGmOE
MQGf%CL?%\4hIL/0EeCk7/"EuT\$NP7/RXGA;`eKG!iX5_^`7JSC)kCW9W0hp2uYr3]h[l8Hi5&-gZe^
IVL/9siuI)(/,cSsrr>CRVuHaH/\h)R1jGY1rrD[3dm*=S5OkY$_F8&9!'E,'r"\#e!:dW`RQ9Kn+58T
lo3CLJS.Q:F-J508r!#)m4SgN$^r`B9,gt;6M<2*>dU(\MCkVWhO]3"]SFCq90Dm*L,4RRjCMbGDY+.d
%rDE(%f9+,soJLsOlJD6jDCoLYG[EOCM8LiOi8BVVK1E7.kN7Th/ZnInh@$8+Sef?0jZpt-E\\.G7=#c
&oS]gb_m*A$Y^;ut7qN6<jXtqb8a=/UMGH5TS=ZX2nDApCPJfA"C!]:aB*4L5L+lXW'5Lul"(pQi12mP
",<4\rAu3MepfMGWU5CB?JOL8L!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!Eo82O)Lj
jWCq.#]4r-omU&"QqcojB'V7YM"pT>90JE]b'EO5c*J,@I9s7c,:N&,7;8m_^8Jd_7YW,*m:qkj0)%8K
)#9[Kc^DeG>GbW2\@'k2feF_gZ<q,bD<+!#NE4=Nk^rnY:G:V2*[P%4$UA3$jqs@S3`)j-!OB[]67RM,
=A+jm]^QqaH8L!4D7Z/5Tb,^lg7+?/C/G0mfSQ=#meTBa,DUfI6([Y%L,D$/FjQ@eVE5QY2?iX"68>:t
i!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!ZSaRYAGSoQtA>mWTfQ51Yd,V'8Ji1Gh'5!(p5_9%mE(
69T[Bo8JjHf!:fXQg'K<UYB$g/nc"Yp/u`Q)"HpZ43]Oa7((01iZm+SlJBD4F5U0[S!dWLP>hlE;lt-T
I@uh)_ccsF^=)Zecgt]C\JYXh^p<GZ^[.!cZ4?riG5V4el!!+>E!"/)dDm@D7)V(7"U1orq%<Ehc96Ah
2bX9RCJW;!\0]S0(:-);aL3+T]B_F/?qm&Wl`p.tPPQIY(+G)[Th$ZKXIh5_uBf4,C%-69aEB07/@9Dt
,kC-&0dfG7*M;+PhR6o'e7Q.lc?Dhl&HQ/G=%7Jgkrg,.I1S)($_iYTQ]Q/R*Nl@%]T]ml!\/W&jl,G2
&a=*d?6OG69J-m^!J-m^!J-m^!J-m^!J-m^!J-m^!J-m^!J-m^!J-m^!J-m^-020aQdl^WQVU)5W1IlS
!/=+:m;L(4@cD!bha]F:c_T8P[=g@QR1QW)u*tN(OqOuDKJjDToO\j@IMDoA>FGRBDF1JU!TUkP8o/:j
.*EZH7i_;&i/8Rc)RYI?YEW(S:P;2r6CS/%fZ9OQS[=L:SrZPL/aDCcMjCf?-?J[cbqOO1rr0###R+^M
0\@7PnSm&.m)+S]ZJc_J"Mf15?=OJDDQV+X!D*q)RgHjgjg"ejD+3Z<18<S&+js,gt5:@3Hl4d)a!#/:
!!#/:!!#/:!!#/:!!#/:!!#/:!!#/:!!#5sn[!.hAgWVF9.9"]VEUGm;e52^D5^8^FF]WMVRGV?(9Ybr
)0_n"EaSUP*QTT9$=Ch!7EWC=],M$5nhc'OT_55KX!$&0A!60=ic!`6&VqN)JW)/h80R$,PGf_r;!3mL
D`!&>P+P6VnkU36Wi4;_`4^QAL$F.0DI82i&`JSb=Mrh=s2*5LJPk.q'T3]nrYjK4cj/,DoU\H=]k1`4
*n"NqQ/f9r-GUNk(^gu@Wq=0u7pc0P/mfdELg4eA4R`2Qi]s0j3nY7:5Z,pFZZ9Vc]A/5SL:dZZ'>3*Z
PO22p+F=Fin81:3iiAs;_.%gX!.%gX!.%gX!.%gX!.%gX!.%gX!.%gX!.%gX!.%gX!.%gX!.%gXIo\U0
nRSC[qB*=+R$tp]-,Zmm)8joc!7%>pQJOdkqI%qUE:^2:1[SO%YZaP"j=G.u`k!_d+]VoM]Cj[*?NPOR
:<IJ4?3lTXUbGsGeCCIGkCuGs$E]d6V'X;>prT.;CLBHk5MC8J!MC8J!MC8J!MC8J!MC8J!MC8J!MC8J
!MC8J!MC8J!MC8J)o%7)@+d-&#,]hM-0M21^<[ai7>6@q=&S"6t:o^8k5emKMQAR*k;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20
!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20"s4I~>
Q
[ 1.00000 0 0 1.00000 200.000 200.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -200.000 -200.000 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
